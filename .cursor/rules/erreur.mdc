---
description: suivre une démarche méthodique pour identifier et résoudre le problème
globs: 
alwaysApply: true
---
En cas d'erreurs répétées, tu dois suivre une démarche méthodique pour identifier et résoudre le problème. Voici les étapes à suivre :

Créer une Liste de Questions : Pour chaque erreur, crée une liste de questions qui t'aideront à diagnostiquer la source du problème. Ces questions doivent être catégorisées pour te guider dans la bonne direction.

Catégories de Questions :

Code Actuel :

L'erreur vient-elle du code actuel ?
Ai-je respecté ce qu'on m'a demandé ?
Ai-je provoqué des erreurs supplémentaires ?
Conflits de Fichiers :

Dois-je vérifier quel fichier pourrait entrer en conflit avec mon code actuel ?
Est-ce mon code actuel qui provoque ces erreurs ?
Traces de l'Ancien Code :

Y a-t-il encore des traces de l'ancien code ?
Exemple de Liste de Questions :

Code Actuel :

Le code actuel contient-il des erreurs de syntaxe ?
Ai-je correctement implémenté les fonctionnalités demandées ?
Ai-je introduit des bugs en modifiant le code ?
Conflits de Fichiers :

Y a-t-il des fichiers qui pourraient interférer avec le code actuel ?
Ai-je vérifié les dépendances entre les fichiers ?
Le code actuel est-il en conflit avec d'autres parties du projet ?
Traces de l'Ancien Code :

Ai-je supprimé toutes les références à l'ancien code ?
Y a-t-il des variables ou des fonctions obsolètes encore présentes ?
Ai-je nettoyé les fichiers de configuration et les caches ?
Suivre les Questions : Utilise ces questions pour orienter ton diagnostic et éviter d'écrire du code inutile. Chaque question doit te rapprocher de la source du problème et te guider vers une solution efficace.

En suivant cette démarche, tu pourras identifier et résoudre les erreurs de manière systématique et efficace.